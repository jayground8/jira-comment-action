name: 'Jira Commenter'
description: 'Adds a comment to a Jira issue with commit information.'
inputs:
  jira_user_email:
    description: 'Email of the Jira user for authentication.'
    required: true
  jira_api_key:
    description: 'API key for the Jira instance.'
    required: true
  jira_instance:
    description: 'URL of the Jira instance.'
    required: true
  issue_key_prefix:
    description: 'A newline-separated list of prefixes for Jira issue keys'
    required: false
runs:
  using: 'composite'
  steps:
    - id: get_commit_info
      run: |
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
        echo "COMMITTER_USERNAME=$(git log -1 --pretty=%an)" >> $GITHUB_ENV
        echo "COMMIT_URL=${{ github.server_url }}/${{ github.repository }}/commit/$(git rev-parse HEAD)" >> $GITHUB_ENV

        if [[ -n "${{ inputs.issue_key_prefix }}" ]]; then
          # Convert newline-separated prefixes into a regex OR pattern
          PREFIX_REGEX=$(echo "${{ inputs.issue_key_prefix }}" | tr '\n' '|' | sed 's/|$//')
          JIRA_ISSUE_KEY=$(echo "$COMMIT_MESSAGE" | grep -oP "($PREFIX_REGEX)-[0-9]+" | head -n 1)
          echo "jira_issue_key=$JIRA_ISSUE_KEY" >> $GITHUB_OUTPUT
        else
          echo "jira_issue_key=" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - run: $GITHUB_ACTION_PATH/main.sh
      shell: bash
      if: |
        ${{ steps.get_commit_info.outputs.jira_issue_key != '' }}
      env:
        JIRA_USER_EMAIL: ${{ inputs.jira_user_email }}
        JIRA_API_KEY: ${{ inputs.jira_api_key }}
        JIRA_INSTANCE: ${{ inputs.jira_instance }}
        ISSUE_KEY: ${{ steps.get_commit_info.outputs.jira_issue_key }}
        COMMITTER_USERNAME: ${{ env.COMMITTER_USERNAME }}
        COMMIT_MESSAGE: ${{ env.COMMIT_MESSAGE }}
        COMMIT_URL: ${{ env.COMMIT_URL }}
        REPOSITORY_NAME: ${{ github.repository }}
