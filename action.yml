name: 'Jira Commenter'
description: 'Adds a comment to a Jira issue with commit information.'

inputs:
  jira_user_email:
    description: 'Email of the Jira user for authentication.'
    required: true
  jira_api_key:
    description: 'API key for the Jira instance.'
    required: true
  jira_instance:
    description: 'URL of the Jira instance.'
    required: true
  issue_key_prefix:
    description: 'A comma-separated list of prefixes for Jira issue keys'
    required: false

runs:
  using: 'composite'
  steps:
    # This step checks out the repository's code so the action can access the git history.
    - uses: actions/checkout@v4
      with:
        # Fetch all history for all branches and tags
        fetch-depth: 0

    # This step extracts information from the latest commit and finds the Jira issue key.
    - id: get_commit_info
      run: |
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
        echo "$COMMIT_MESSAGE" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

        echo "COMMITTER_USERNAME=$(git log -1 --pretty=%an)" >> $GITHUB_ENV
        echo "COMMIT_URL=${{ github.server_url }}/${{ github.repository }}/commit/$(git rev-parse HEAD)" >> $GITHUB_ENV

        JIRA_ISSUE_KEY=""
        if [[ -n "${{ inputs.issue_key_prefix }}" ]]; then
          # Convert comma-separated prefixes into a regex OR pattern, e.g., "PROJ,TEST" -> "(PROJ|TEST)"
          PREFIX_REGEX=$((echo "${{ inputs.issue_key_prefix }}" | tr ',' '|') | sed -e 's/^/(/' -e 's/$/)/')
          JIRA_ISSUE_KEY=$(echo "$COMMIT_MESSAGE" | grep -oE "${PREFIX_REGEX}-[0-9]+" | head -n 1)
        fi
        echo "jira_issue_key=$JIRA_ISSUE_KEY" >> $GITHUB_OUTPUT
      shell: bash

    # This step runs the main shell script to post the comment to Jira.
    # It only runs if a Jira issue key was found in the previous step.
    - name: Post comment to Jira
      if: steps.get_commit_info.outputs.jira_issue_key != ''
      run: $GITHUB_ACTION_PATH/main.sh
      shell: bash
      env:
        JIRA_USER_EMAIL: ${{ inputs.jira_user_email }}
        JIRA_API_KEY: ${{ inputs.jira_api_key }}
        JIRA_INSTANCE: ${{ inputs.jira_instance }}
        ISSUE_KEY: ${{ steps.get_commit_info.outputs.jira_issue_key }}
        COMMITTER_USERNAME: ${{ env.COMMITTER_USERNAME }}
        COMMIT_MESSAGE: ${{ env.COMMIT_MESSAGE }}
        COMMIT_URL: ${{ env.COMMIT_URL }}
        REPOSITORY_NAME: ${{ github.repository }}
